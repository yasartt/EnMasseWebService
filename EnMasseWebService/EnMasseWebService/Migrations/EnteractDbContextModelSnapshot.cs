// <auto-generated />
using System;
using EnMasseWebService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnMasseWebService.Migrations
{
    [DbContext(typeof(EnteractDbContext))]
    partial class EnteractDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnMasseWebService.Models.Entities.Cafe", b =>
                {
                    b.Property<Guid>("CafeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CafeId");

                    b.ToTable("Cafes");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.CafeUser", b =>
                {
                    b.Property<int>("CafeUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CafeUserId"));

                    b.Property<Guid>("CafeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CafeUserId");

                    b.HasIndex("CafeId");

                    b.HasIndex("UserId");

                    b.ToTable("CafeUsers");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.ContactRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("ContactRequests");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.Daily", b =>
                {
                    b.Property<Guid>("DailyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DailyId");

                    b.HasIndex("UserId");

                    b.ToTable("Dailies");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhotoId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.UserContacts", b =>
                {
                    b.Property<int>("UserContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserContactId"));

                    b.Property<Guid>("User1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User2Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserContactId");

                    b.HasIndex("User1Id");

                    b.HasIndex("User2Id");

                    b.ToTable("UserContacts");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.CafeUser", b =>
                {
                    b.HasOne("EnMasseWebService.Models.Entities.Cafe", "cafe")
                        .WithMany()
                        .HasForeignKey("CafeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnMasseWebService.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("cafe");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.ContactRequest", b =>
                {
                    b.HasOne("EnMasseWebService.Models.Entities.User", "Receiver")
                        .WithMany("ReceivedRequests")
                        .HasForeignKey("ReceiverId")
                        .IsRequired();

                    b.HasOne("EnMasseWebService.Models.Entities.User", "Sender")
                        .WithMany("SentRequests")
                        .HasForeignKey("SenderId")
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.Daily", b =>
                {
                    b.HasOne("EnMasseWebService.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.UserContacts", b =>
                {
                    b.HasOne("EnMasseWebService.Models.Entities.User", "User1")
                        .WithMany("UserContacts")
                        .HasForeignKey("User1Id")
                        .IsRequired();

                    b.HasOne("EnMasseWebService.Models.Entities.User", "User2")
                        .WithMany("ContactUsers")
                        .HasForeignKey("User2Id")
                        .IsRequired();

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("EnMasseWebService.Models.Entities.User", b =>
                {
                    b.Navigation("ContactUsers");

                    b.Navigation("ReceivedRequests");

                    b.Navigation("SentRequests");

                    b.Navigation("UserContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
